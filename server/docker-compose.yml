version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  app-database:
    image: postgres:16.0
    container_name: qr-app-database
    restart: always
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE_APP}
    volumes:
    - ./postgres/app/postgres-data:/var/lib/postgresql/data

  dashboard-database:
    image: postgres:16.0
    container_name: qr-dashboard-database
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE_DASHBOARD}
    volumes:
    - ./postgres/dashboard/pg-dashboard/postgres-data:/var/lib/postgresql/data

  gateway:
    container_name: qr-gateway
    build: 
      context: qr-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"

  app:
    container_name: qr-app
    build: 
      context: qr-app
      dockerfile: Dockerfile
    ports:
      - "8081:8081"

  dashboard:
    container_name: qr-dashboard
    build: 
      context: qr-dashboard
      dockerfile: Dockerfile
    ports:
      - "8082:8082"